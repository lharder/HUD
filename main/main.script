require( "hud.hud" )


function init( self )
	msg.post( ".", "acquire_input_focus" )
	msg.post( "@render:", "use_fixed_fit_projection", { near = -1, far = 1 } )

	local hud = HUD.new( "/hud#factory" )
	local id = hud:newRadar( "/player", 200, 200, 40 )
	local radar = hud:radar( id )

	radar:registerBlip( "/ship",  "#00ff00", weight )
	radar:registerBlip( "/player",  "#ffff00", weight )

	self.cominfo = hud:newCominfo( "comInfo01", 500, 300 )
	self.cominfo:addClickListener( "/hud" )
	
	self.cominfo:setOuterValue( 99, 0, 100 )
	self.cominfo:setInnerValue( 99, 0, 100 )

	self.speedBar = hud:newHBar( "speed", 125, -110, 180, 15, 0, 100, 100 )
	self.cominfo.tray:attach( "speed" )

	self.btn = hud:newButton( "btn01", 274, -30, "Click me!", "/hud" )
	self.cominfo.tray:attach( "btn01" )

	self.img = hud:newImage( "img01", 0, 0, "hud/bomb", 80, 80, nil ) 
	self.cominfo:attach( "img01" )
	
	-- 							 id,      x,   y,   width, height, min, max,  value, colHi, colMid, colLo, isVertical
	-- self.speedBar = hud:newVBar( "speed", 400, 200,     30,   200,   0, 100,   100, nil, nil, nil )
	-- self.speedBar:setCaption( "Speed (0)", nil, nil, "#02edff", 1, 45 )

	-- 							 id,      x,   y, width, height, min, max,  value, colHi, colMid, colLo
	-- self.fuelBar = hud:newHBar( "fuel", 600, 200,   200,     15,   0, 100, 100 )
	-- self.fuelBar:setCaption( "Fuel ", nil, nil, "#02edff", 0.5 )
end


function on_input( self, action_id, action)
	if action_id == hash( "touch" ) then
		
		local pos = go.get_position( "/ship" )
		pos.x = pos.x - 1
		go.set_position( pos, "/ship" )

		
		local val = self.speedBar:getValue() - 1
		self.speedBar:update( val )
		--[[
		self.speedBar:setCaption( "Speed (" .. self.speedBar:getValue() .. ")"  )
		local delta = math.random( 100 ) 
		self.fuelBar:update( delta )
		--]]

		local val = self.cominfo.getOuterValue()
		val = val - 1
		self.cominfo:setOuterValue( val )
		self.cominfo:setInnerValue( val )

	
		if( self.img.texture == "hud/heart" ) then
			self.img:swipe( "hud/bomb", 1, 0 )
		else 
			self.img:swipe( "hud/heart", -1, 0 )
		end
		
	end
end


function on_message( self, message_id, message, sender )
	-- pprint( "sender: " .. sender )
	-- pprint( message )

	if message_id == hash( "click" ) then 
		if message.node == hash( self.cominfo.id .. "/indicator" ) then
	
			if self.cominfo.tray.isOpen then
				self.cominfo.tray:close()
			else
				self.cominfo.tray:open()

				self.cominfo:setOuterValue( 99 )
				self.cominfo:setInnerValue( 99 )

				self.cominfo.tray:setSubject( "Hello" )
				self.cominfo.tray:setDescription( "I am the world and rule supreme,,,,!" )
			end
		end
	end
end